catch invalid options and return opts

COLORS!
=======

Refactor tweet printing code, unify throughout

TODO
====

Output needs to live in it's own gem (since evidently more of these
tools will be written soon)

(which carries with it warnings if it's too short.. which means a warn
method.. which means abstracting it's output..)

On the upside, it'll make unit testing similar.
(Add unit tests)

Split config and options out into submodules

Allow upload of media files with the tweet via some kind of --attach
(Has implications for other endpoints because we need that data from the user or to infer it somehow)

Mentions from non-followed accounts don't show up in -f

The handler to work out if a tweet is from you relies on the account
name being the same as the username, which is a dodgy assumption.

PENDING
=======

Add some commands to retweet/favourite etc

Consider allowing to -f multiple accounts at once

Refactor the calls to Twitter to hook my own object, which in turn hooks
the current_account to work out which service it uses.

(Bonus points for adding a hook which can also use an arbitrary user
specified url)

Allow -f #hashtag to follow that hashtag instead of your newsfeed

Seriously consider moving to subcommands

Still needs argv parsing for account etc

twat config to create the first account from scratch

MOAR BACKENDS
=============

Abstract all the logic for the various operations (add, follow, post,
etc etc)

into a wrapper for each service so that twat can natively support
facebook, g+ etc etc as I get around to writing the new modules.

READLINE SHIT
=============

Would be pretty sweet to be able to change color after too many chars
entered, be able to puts a tweet while user is entering text, etc.

Look into it (and create another feature branch that's destined to rot)
